[{"id":"3ea87a8b.a55ba6","type":"template","z":"e03a8c53.e9de2","name":"video_chat_js","field":"video_chat","fieldType":"msg","format":"javascript","syntax":"mustache","template":"const Peer = window.Peer;\nvar room_ID = \"test\";\ndocument.getElementById(\"room_ID\").textContent = room_ID;\n\n\n(async function main() {\n  const localVideo = document.getElementById('js-local-stream');\n  const remoteVideos = document.getElementById('js-remote-streams');\n  const sdkSrc = document.querySelector('script[src*=skyway]');\n\n  \n  const status = document.getElementById(\"status\").textContent;\n  console.log(status);\n  const idList = JSON.parse(document.getElementById(\"ID\").textContent);\n  console.log(idList.length);\n  \n  const getRoomModeByHash = () => 'sfu';\n\n  const localStream = await navigator.mediaDevices\n    .getUserMedia({\n      audio: true,\n      video: true,\n    })\n    .catch(console.error);\n\n  // Render local stream\n  localVideo.muted = true;\n  localVideo.srcObject = localStream;\n  localVideo.playsInline = true;\n  await localVideo.play().catch(console.error);\n\n  // eslint-disable-next-line require-atomic-updates\n  const peer = (window.peer = await new Peer({\n    key: '7db51739-88e6-4d2b-95a7-d73a4ab6c5dc',\n    debug: 3,\n  }));\n\n  peer.on('open',() => {\n      peerList = []\n      peer.listAllPeers((peers) => {\n        peerList = peers\n        console.log(peers);\n      \n      \n      var selectData = new Array();\n      var roomIDList = new Array();\n      for(var i = 0; i < idList.length; i++){\n        var idData = idList[i];\n        roomIDList.push(idData.room_name);\n        console.log(idData);\n        if(idData.peerIDs.length == 1){\n            if(peerList.includes(idData.peerIDs[0])){\n            }else{\n              console.log(\"else in\");\n              var delData = new XMLHttpRequest();\n              var delText = JSON.stringify(idData);\n              delData.open(\"DELETE\", \"http://127.0.0.1:1880/deletebhfsjfaBYHUBHfvhre3487265ghivgsvr7gvegfry\");\n              delData.send(delText); \n              continue;\n            }\n        } \n        if(idData.peerIDs.length < 4){\n            if(idData.room_status == status){\n                selectData.push(idData);\n            }\n        }\n        \n      }\n      var S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n      var N=16;\n      \n      console.log(selectData);\n      var newFlag = true;\n      if(selectData.length > 0){\n        var newNum = Math.floor( Math.random() * 2 );\n        var num = Math.floor( Math.random() * (selectData.length + newNum ) );\n        console.log(\"num : \" + num);\n        \n        // ランダムで部屋を外した場合\n        if(selectData.length == num){\n          room_ID = Array.from(Array(N)).map(()=>S[Math.floor(Math.random()*S.length)]).join('');\n          while(roomIDList.includes(room_ID)){\n            room_ID = Array.from(Array(N)).map(()=>S[Math.floor(Math.random()*S.length)]).join('');  \n          }\n          document.getElementById(\"room_ID\").textContent = room_ID;\n          var myRoomInfo = {\n              \"room_name\": room_ID,\n              \"peerIDs\" : [peer.id],\n              \"room_status\": status\n          };\n          console.log(\"room_ID_1 : \" + room_ID);\n        }\n        \n        // ランダムに部屋を選べた場合\n        else{\n          room_ID = selectData[num].room_name;\n          document.getElementById(\"room_ID\").textContent = room_ID;\n          console.log(\"room_ID_2 : \" + room_ID);\n          var myRoomInfo = selectData[num];\n          myRoomInfo.peerIDs.push(peer.id); \n          newFlag = false;\n        }\n      }\n      // roomがない場合\n      else{\n        room_ID = Array.from(Array(N)).map(()=>S[Math.floor(Math.random()*S.length)]).join('');\n        while(roomIDList.includes(room_ID)){\n          room_ID = Array.from(Array(N)).map(()=>S[Math.floor(Math.random()*S.length)]).join('');  \n        }\n        document.getElementById(\"room_ID\").textContent = room_ID;\n        var myRoomInfo = {\n          \"room_name\": room_ID,\n          \"peerIDs\" : [peer.id],\n          \"room_status\": status\n        };\n        console.log(\"room_ID_3 : \" + room_ID);\n      }\n      \n      \n  \n\n        const room = peer.joinRoom(room_ID, {\n          mode: getRoomModeByHash(),\n          stream: localStream,\n        });\n    \n        room.once('open', () => {\n            if(newFlag){\n              var xhr = new XMLHttpRequest();\n              var jsonText = JSON.stringify(myRoomInfo);\n              xhr.open(\"POST\", \"http://127.0.0.1:1880/aewrtfgvbygu987ZSNMhijGHVjhc786548ijGFDghb\");\n              xhr.send(jsonText);                \n            }\n\n        });\n    \n        // Render remote stream for new peer join in the room\n        room.on('stream', async stream => {\n          const newVideo = document.createElement('video');\n          newVideo.srcObject = stream;\n          newVideo.playsInline = true;\n          // mark peerId to find it later at peerLeave event\n          newVideo.setAttribute('data-peer-id', stream.peerId);\n          remoteVideos.append(newVideo);\n          await newVideo.play().catch(console.error);\n        });\n    \n        room.on('peerJoin', peerId => {\n          console.log(\"peerId : \" + peerId);\n          var request = new XMLHttpRequest();\n          request.open('GET', '/getDatasdfghjk456tyghfrtyuijhkgftyuijh', false); \n          request.send();\n        \n          if (request.status === 200) {\n            var Data = JSON.parse(request.responseText);\n            console.log(JSON.parse(request.responseText));\n          }\n          for(var i = 0; i < Data.length; i++){\n              if(Data[i].room_name == room_ID){\n                  var roomData = Data[i];\n                  break;\n              }\n          }\n          roomData.peerIDs.push(peerId);\n          var post = new XMLHttpRequest();\n          var jsonDATA = JSON.stringify(roomData);\n          post.open(\"POST\", \"http://127.0.0.1:1880/aewrtfgvbygu987ZSNMhijGHVjhc786548ijGFDghb\");\n          post.send(jsonDATA);            \n          \n        });\n    \n        // for closing room members\n        room.on('peerLeave', peerId => {\n          const remoteVideo = remoteVideos.querySelector(\n            `[data-peer-id=\"${peerId}\"]`\n          );\n          var peer_ID = peerId;\n          var request = new XMLHttpRequest();\n          request.open('GET', '/getDatasdfghjk456tyghfrtyuijhkgftyuijh', false); \n          request.send();\n        \n          if (request.status === 200) {\n            var Data = JSON.parse(request.responseText);\n            console.log(Data);\n          }\n          for(var i = 0; i < Data.length; i++){\n              if(Data[i].room_name == room_ID){\n                  var roomData = Data[i];\n                  break;\n              }\n          }\n          for(var j = 0; j < roomData.peerIDs.length; j++){\n              if(roomData.peerIDs[j] == peerId){\n                  roomData.peerIDs.splice(j, 1);\n              }              \n          }\n          var post = new XMLHttpRequest();\n          var jsonDATA = JSON.stringify(roomData);\n          post.open(\"POST\", \"http://127.0.0.1:1880/aewrtfgvbygu987ZSNMhijGHVjhc786548ijGFDghb\");\n          post.send(jsonDATA); \n           \n          remoteVideo.srcObject.getTracks().forEach(track => track.stop());\n          remoteVideo.srcObject = null;\n          remoteVideo.remove();\n        });\n    \n    });\n  });\n  peer.on('error', console.error);\n})();","output":"str","x":620,"y":280,"wires":[["e2ad7fbd.92de3"]]}]