[{"id":"6707a2e9.8c450c","type":"tab","label":"ラズパイフロー","disabled":false,"info":""},{"id":"42adfef6.c37c4","type":"comment","z":"6707a2e9.8c450c","name":"ビデオチャット","info":"","x":140,"y":280,"wires":[]},{"id":"7921dfd.9b3e82","type":"http response","z":"6707a2e9.8c450c","name":"","statusCode":"","headers":{},"x":530,"y":320,"wires":[]},{"id":"53f6d35c.47d61c","type":"http in","z":"6707a2e9.8c450c","name":"","url":"/videochat","method":"get","upload":false,"swaggerDoc":"","x":180,"y":320,"wires":[["dfb846c8.4b5d38"]]},{"id":"1fb8f80a.1492b8","type":"template","z":"6707a2e9.8c450c","name":"clock_js","field":"js.clock_js","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"// 時計のメインとなる関数\nfunction clock()\n{\n    // 曜日を表す各文字列の配列\n    var weeks = new Array(\"Sun\",\"Mon\",\"Thu\",\"Wed\",\"Thr\",\"Fri\",\"Sat\");\n    // 現在日時を表すインスタンスを取得\n    var now = new Date();\n    // 年\n    var y = now.getFullYear();\n    // 月 0~11で取得されるので実際の月は+1したものとなる\n    var mo = now.getMonth() + 1;\n    // 日\n    var d = now.getDate();\n    // 曜日 0~6で日曜始まりで取得されるのでweeks配列のインデックスとして指定する\n    var w = weeks[now.getDay()];\n    // 時\n    var h = now.getHours();\n    // 分\n    var mi = now.getMinutes();\n    // 秒\n    var s = now.getSeconds();\n\n    // 日付時刻文字列のなかで常に2ケタにしておきたい部分はここで処理\n    if (mo < 10) mo = \"0\" + mo;\n    if (d < 10) d = \"0\" + d;\n    if (mi < 10) mi = \"0\" + mi;\n    if (s < 10) s = \"0\" + s;\n\n    //　HTML: <span id=\"clock_date\">(ココの日付文字列を書き換え)</span>\n    document.getElementById(\"clock_date\").innerHTML =  y + \"/\" + mo + \"/\" + d + \" (\" + w + \")\";\n    //　HTML: <span id=\"clock_time\">(ココの時刻文字列を書き換え)</span>\n    document.getElementById(\"clock_time\").innerHTML = h + \":\" + mi + \":\" + s;\n    //　HTML: <div id=\"clock_frame\"> の内部要素のフォントサイズをウインドウサイズの10分の1ピクセルに設定\n    document.getElementById(\"clock_frame\").style.fontSize =  window.innerWidth / 10 + \"px\";\n}\n\n// 上記のclock関数を1000ミリ秒ごと(毎秒)に実行する\nsetInterval(clock, 1000);","output":"str","x":320,"y":220,"wires":[["9425e384.3ec52"]]},{"id":"4a7444ff.dabc9c","type":"http in","z":"6707a2e9.8c450c","name":"","url":"clock","method":"get","upload":false,"swaggerDoc":"","x":160,"y":220,"wires":[["1fb8f80a.1492b8"]]},{"id":"9425e384.3ec52","type":"template","z":"6707a2e9.8c450c","name":"style_css","field":"css.style_css","fieldType":"msg","format":"css","syntax":"mustache","template":"/* Google Webフォントを利用設定するCSSをインポート */\n@import url(http://fonts.googleapis.com/css?family=Oleo+Script+Swash+Caps);\n\nhtml{\n    cursor: none;\n}\n\n/* body要素(全体) */\nbody\n{\n    /* 文字色を白に */\n    color: white;\n    /* 背景色を黒に */\n    background-color: black;\n}\n\n/* id=\"clock_frame\" のdiv要素 */\ndiv#clock_frame\n{\n    /* 横幅を親要素であるbodyの100%(同じ幅)にする */\n    width: 100%;\n}\n\n/* span要素のデフォルト */\nspan\n{\n    /* 本来はインライン要素であるspanをブロック要素として扱う */\n    display: block;\n    /* ここでは親要素であるdivの内部で右に寄せて配置させる */\n    float: right;\n    /* 横幅を親要素であるdivの85%にする */\n    width: 85%;\n    /* フォントの種類を一番上で指定したGoogle Webフォントに設定する */\n    font-family: 'Oleo Script Swash Caps', cursive;\n}\n\n/* id=\"clock_date\" のspan要素 */\nspan#clock_date\n{\n    margin: 50px 0 40px 0;\n    /* この要素の中におけるテキストを右詰めにする デフォルト値のtext-align:leftを上書き */\n    text-align: right;\n    /* フォントの大きさを親要素であるdivで設定されたサイズ(px)の0.5倍にする */\n    font-size: 0.5em;\n    /* 右のパディングの幅を親要素であるdivで設定されたフォントサイズ(px)の0.5倍にする */\n    padding-right: 0.5em;\n}\n\n/* id=\"clock_time\" のspan要素 */\nspan#clock_time\n{\n    /* フォントの大きさを親要素であるdivで設定されたサイズ(px)の2倍にする */\n    font-size: 2em;\n}","output":"str","x":480,"y":220,"wires":[["55405b7.06477a4"]]},{"id":"55405b7.06477a4","type":"template","z":"6707a2e9.8c450c","name":"index_html","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE html>\n<html>\n\n<head>\n    <!-- 文字コードの宣言 -->\n    <meta charset=\"UTF-8\">\n    <!-- ページのタイトル(ブラウザのタイトルバーに表示) -->\n    <title>Clock</title>\n    <!-- スタイルシート(CSS)読み込み -->\n    <style>{{{css.style_css}}}</style>\n    <!-- JavaScript読み込み -->\n    <script>{{{js.clock_js}}}</script>\n</head>\n\n<body>\n    <!-- 時計枠 -->\n    <div id=\"clock_frame\">\n        <!-- 日付部分 -->\n        <span id=\"clock_date\"></span>\n        <!-- 時刻部分 -->\n        <span id=\"clock_time\"></span>\n    </div>\n</body>\n\n</html>","output":"str","x":650,"y":220,"wires":[["2458356b.2edf8a"]]},{"id":"2458356b.2edf8a","type":"http response","z":"6707a2e9.8c450c","name":"","statusCode":"","headers":{},"x":810,"y":220,"wires":[]},{"id":"255be409.8a2ccc","type":"comment","z":"6707a2e9.8c450c","name":"時刻表示","info":"","x":120,"y":180,"wires":[]},{"id":"cddda6d0.435c38","type":"comment","z":"6707a2e9.8c450c","name":"背景画面","info":"","x":120,"y":80,"wires":[]},{"id":"69a7603c.a4f7f","type":"http response","z":"6707a2e9.8c450c","name":"","statusCode":"","headers":{},"x":690,"y":120,"wires":[]},{"id":"8e2f04bc.5d5088","type":"http in","z":"6707a2e9.8c450c","name":"","url":"/home","method":"get","upload":false,"swaggerDoc":"","x":170,"y":120,"wires":[["9906dc9e.cf0ad"]]},{"id":"9906dc9e.cf0ad","type":"template","z":"6707a2e9.8c450c","name":"style_css","field":"css.style_css","fieldType":"msg","format":"css","syntax":"mustache","template":"/* Google Webフォントを利用設定するCSSをインポート */\n@import url(http://fonts.googleapis.com/css?family=Oleo+Script+Swash+Caps);\n\nhtml{\n    cursor: none;\n}\n\n/* body要素(全体) */\nbody\n{\n    /* 文字色を白に */\n    color: white;\n    /* 背景色を黒に */\n    background-color: black;\n}\n\n/* id=\"clock_frame\" のdiv要素 */\ndiv#clock_frame\n{\n    /* 横幅を親要素であるbodyの100%(同じ幅)にする */\n    width: 100%;\n}\n\n/* span要素のデフォルト */\nspan\n{\n    /* 本来はインライン要素であるspanをブロック要素として扱う */\n    display: block;\n    /* ここでは親要素であるdivの内部で右に寄せて配置させる */\n    float: right;\n    /* 横幅を親要素であるdivの85%にする */\n    width: 85%;\n    /* フォントの種類を一番上で指定したGoogle Webフォントに設定する */\n    font-family: 'Oleo Script Swash Caps', cursive;\n}\n\n/* id=\"clock_date\" のspan要素 */\nspan#clock_date\n{\n    margin: 50px 0 40px 0;\n    /* この要素の中におけるテキストを右詰めにする デフォルト値のtext-align:leftを上書き */\n    text-align: right;\n    /* フォントの大きさを親要素であるdivで設定されたサイズ(px)の0.5倍にする */\n    font-size: 0.5em;\n    /* 右のパディングの幅を親要素であるdivで設定されたフォントサイズ(px)の0.5倍にする */\n    padding-right: 0.5em;\n}\n\n/* id=\"clock_time\" のspan要素 */\nspan#clock_time\n{\n    /* フォントの大きさを親要素であるdivで設定されたサイズ(px)の2倍にする */\n    font-size: 2em;\n}","output":"str","x":360,"y":120,"wires":[["726bae2f.f4f2f"]]},{"id":"726bae2f.f4f2f","type":"template","z":"6707a2e9.8c450c","name":"index_html","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE html>\n<html>\n\n<head>\n    <!-- 文字コードの宣言 -->\n    <meta charset=\"UTF-8\">\n    <!-- ページのタイトル(ブラウザのタイトルバーに表示) -->\n    <title>Home</title>\n    <!-- スタイルシート(CSS)読み込み -->\n    <style>{{{css.style_css}}}</style>\n</head>\n\n<body>\n    <!-- 時計枠 -->\n    <div id=\"clock_frame\">\n        <!-- 日付部分 -->\n        <span id=\"clock_date\">ホームやでぇ</span>\n        <!-- 時刻部分 -->\n        <span id=\"clock_time\"></span>\n    </div>\n</body>\n\n</html>","output":"str","x":530,"y":120,"wires":[["69a7603c.a4f7f"]]},{"id":"dfb846c8.4b5d38","type":"template","z":"6707a2e9.8c450c","name":"video_chat_js","field":"video_chat","fieldType":"msg","format":"javascript","syntax":"mustache","template":"const Peer = window.Peer;\nvar room_ID = \"test\";\ndocument.getElementById(\"room_ID\").textContent = room_ID;\n\n\n(async function main() {\n  const localVideo = document.getElementById('js-local-stream');\n  const remoteVideos = document.getElementById('js-remote-streams');\n  const sdkSrc = document.querySelector('script[src*=skyway]');\n\n  \n  const status = document.getElementById(\"status\").textContent;\n  console.log(status);\n  const idList = JSON.parse(document.getElementById(\"ID\").textContent);\n  console.log(idList.length);\n  \n  const getRoomModeByHash = () => 'sfu';\n\n  const localStream = await navigator.mediaDevices\n    .getUserMedia({\n      audio: true,\n      video: true,\n    })\n    .catch(console.error);\n\n  // Render local stream\n  localVideo.muted = true;\n  localVideo.srcObject = localStream;\n  localVideo.playsInline = true;\n  await localVideo.play().catch(console.error);\n\n  // eslint-disable-next-line require-atomic-updates\n  const peer = (window.peer = await new Peer({\n    key: '7db51739-88e6-4d2b-95a7-d73a4ab6c5dc',\n    debug: 3,\n  }));\n\n  peer.on('open',() => {\n      peerList = []\n      peer.listAllPeers((peers) => {\n        peerList = peers\n        console.log(peers);\n      \n      \n      var selectData = new Array();\n      var roomIDList = new Array();\n      for(var i = 0; i < idList.length; i++){\n        var idData = idList[i];\n        roomIDList.push(idData.room_name);\n        console.log(idData);\n        if(idData.peerIDs.length == 1){\n            if(peerList.includes(idData.peerIDs[0])){\n            }else{\n              console.log(\"else in\");\n              var delData = new XMLHttpRequest();\n              var delText = JSON.stringify(idData);\n              delData.open(\"DELETE\", \"http://127.0.0.1:1880/deletebhfsjfaBYHUBHfvhre3487265ghivgsvr7gvegfry\");\n              delData.send(delText); \n              continue;\n            }\n        } \n        if(idData.peerIDs.length < 3){\n            if(idData.room_status == status){\n                selectData.push(idData);\n            }\n        }\n        \n      }\n      var S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n      var N=16;\n      \n      console.log(selectData);\n      var newFlag = true;\n      if(selectData.length > 0){\n        var newNum = Math.floor( Math.random() * 2 );\n        var num = Math.floor( Math.random() * (selectData.length + newNum ) );\n        console.log(\"num : \" + num);\n        \n        // ランダムで部屋を外した場合\n        if(selectData.length == num){\n          room_ID = Array.from(Array(N)).map(()=>S[Math.floor(Math.random()*S.length)]).join('');\n          while(roomIDList.includes(room_ID)){\n            room_ID = Array.from(Array(N)).map(()=>S[Math.floor(Math.random()*S.length)]).join('');  \n          }\n          document.getElementById(\"room_ID\").textContent = room_ID;\n          var myRoomInfo = {\n              \"room_name\": room_ID,\n              \"peerIDs\" : [peer.id],\n              \"room_status\": status\n          };\n          console.log(\"room_ID_1 : \" + room_ID);\n        }\n        \n        // ランダムに部屋を選べた場合\n        else{\n          room_ID = selectData[num].room_name;\n          document.getElementById(\"room_ID\").textContent = room_ID;\n          console.log(\"room_ID_2 : \" + room_ID);\n          var myRoomInfo = selectData[num];\n          myRoomInfo.peerIDs.push(peer.id); \n          newFlag = false;\n        }\n      }\n      // roomがない場合\n      else{\n        room_ID = Array.from(Array(N)).map(()=>S[Math.floor(Math.random()*S.length)]).join('');\n        while(roomIDList.includes(room_ID)){\n          room_ID = Array.from(Array(N)).map(()=>S[Math.floor(Math.random()*S.length)]).join('');  \n        }\n        document.getElementById(\"room_ID\").textContent = room_ID;\n        var myRoomInfo = {\n          \"room_name\": room_ID,\n          \"peerIDs\" : [peer.id],\n          \"room_status\": status\n        };\n        console.log(\"room_ID_3 : \" + room_ID);\n      }\n      \n      \n  \n\n        const room = peer.joinRoom(room_ID, {\n          mode: getRoomModeByHash(),\n          stream: localStream,\n        });\n    \n        room.once('open', () => {\n            if(newFlag){\n              var xhr = new XMLHttpRequest();\n              var jsonText = JSON.stringify(myRoomInfo);\n              xhr.open(\"POST\", \"http://127.0.0.1:1880/aewrtfgvbygu987ZSNMhijGHVjhc786548ijGFDghb\");\n              xhr.send(jsonText);                \n            }\n\n        });\n    \n        // Render remote stream for new peer join in the room\n        room.on('stream', async stream => {\n          const newVideo = document.createElement('video');\n          newVideo.srcObject = stream;\n          newVideo.playsInline = true;\n          // mark peerId to find it later at peerLeave event\n          newVideo.setAttribute('data-peer-id', stream.peerId);\n          remoteVideos.append(newVideo);\n          await newVideo.play().catch(console.error);\n        });\n    \n        room.on('peerJoin', peerId => {\n          console.log(\"peerId : \" + peerId);\n          var request = new XMLHttpRequest();\n          request.open('GET', '/getDatasdfghjk456tyghfrtyuijhkgftyuijh', false); \n          request.send();\n        \n          if (request.status === 200) {\n            var Data = JSON.parse(request.responseText);\n            console.log(JSON.parse(request.responseText));\n          }\n          for(var i = 0; i < Data.length; i++){\n              if(Data[i].room_name == room_ID){\n                  var roomData = Data[i];\n                  break;\n              }\n          }\n          roomData.peerIDs.push(peerId);\n          var post = new XMLHttpRequest();\n          var jsonDATA = JSON.stringify(roomData);\n          post.open(\"POST\", \"http://127.0.0.1:1880/aewrtfgvbygu987ZSNMhijGHVjhc786548ijGFDghb\");\n          post.send(jsonDATA);            \n          \n        });\n    \n        // for closing room members\n        room.on('peerLeave', peerId => {\n          const remoteVideo = remoteVideos.querySelector(\n            `[data-peer-id=\"${peerId}\"]`\n          );\n          var peer_ID = peerId;\n          var request = new XMLHttpRequest();\n          request.open('GET', '/getDatasdfghjk456tyghfrtyuijhkgftyuijh', false); \n          request.send();\n        \n          if (request.status === 200) {\n            var Data = JSON.parse(request.responseText);\n            console.log(Data);\n          }\n          for(var i = 0; i < Data.length; i++){\n              if(Data[i].room_name == room_ID){\n                  var roomData = Data[i];\n                  break;\n              }\n          }\n          var post = new XMLHttpRequest();\n          var jsonDATA = JSON.stringify(roomData);\n          post.open(\"POST\", \"http://127.0.0.1:1880/aewrtfgvbygu987ZSNMhijGHVjhc786548ijGFDghb\");\n          post.send(jsonDATA); \n           \n          remoteVideo.srcObject.getTracks().forEach(track => track.stop());\n          remoteVideo.srcObject = null;\n          remoteVideo.remove();\n        });\n    \n    });\n  });\n  peer.on('error', console.error);\n})();","output":"str","x":380,"y":320,"wires":[["7921dfd.9b3e82"]]}]